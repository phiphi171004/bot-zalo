const axios = require('axios');
require('dotenv').config();

const BOT_TOKEN = process.env.ZALO_BOT_TOKEN;

async function checkBotToken() {
  console.log('üîç Ki·ªÉm tra Bot Token...');
  console.log('Token:', BOT_TOKEN);
  
  try {
    // Test API getMe ƒë·ªÉ ki·ªÉm tra token
    const response = await axios.get(`https://bot-api.zapps.me/bot${BOT_TOKEN}/getMe`);
    
    console.log('‚úÖ Bot Token h·ª£p l·ªá!');
    console.log('Bot info:', response.data);
    return true;
  } catch (error) {
    console.error('‚ùå Bot Token kh√¥ng h·ª£p l·ªá:');
    console.error('Status:', error.response?.status);
    console.error('Data:', error.response?.data);
    return false;
  }
}

async function testWebhook() {
  console.log('\nüîß Test setup webhook...');
  
  try {
    const response = await axios.post(`https://bot-api.zapps.me/bot${BOT_TOKEN}/setWebhook`, {
      url: process.env.WEBHOOK_URL,
      secret_token: process.env.ZALO_SECRET_TOKEN
    });
    
    console.log('üì° Webhook response:', response.data);
    
    if (response.data.ok === false) {
      console.error('‚ùå Webhook setup failed:', response.data.description);
    } else {
      console.log('‚úÖ Webhook setup th√†nh c√¥ng!');
    }
  } catch (error) {
    console.error('‚ùå L·ªói test webhook:');
    console.error('Status:', error.response?.status);
    console.error('Data:', error.response?.data);
  }
}

async function main() {
  console.log('ü§ñ Zalo Bot Token Checker\n');
  
  const tokenValid = await checkBotToken();
  
  if (tokenValid) {
    await testWebhook();
  } else {
    console.log('\nüí° H∆∞·ªõng d·∫´n l·∫•y Bot Token ƒë√∫ng:');
    console.log('1. V√†o https://bot.zapps.me/');
    console.log('2. T·∫°o Bot m·ªõi (kh√¥ng ph·∫£i OA)');
    console.log('3. Copy Bot Token t·ª´ dashboard');
    console.log('4. Bot Token kh√°c v·ªõi OA Access Token!');
  }
}

main(); 